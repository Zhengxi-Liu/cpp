#include<bits/stdc++.h>
#include<unistd.h>
#include <cstdlib>
using namespace std;
const int N = 20;
char s[100][100];
char a[N - 1][N] = {
    {' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
    {'#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
    {'#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#','#',' ','#',' ','#','#'},
    {'#',' ','#',' ','#',' ','#',' ','#',' ',' ','#','#',' ',' ',' ','#',' ',' ','#'},
    {'#','#','#',' ','#',' ',' ',' ',' ',' ','#','#',' ',' ','#',' ','#','#',' ','#'},
    {'#',' ',' ',' ','#','#','#','#','#','#',' ',' ',' ',' ',' ','#',' ','#',' ','#'},
    {'#','#',' ','#',' ','#',' ',' ',' ','#',' ','#',' ','#',' ','#','#','#','#','#'},
    {'#','#',' ','#','#','#',' ','#',' ',' ',' ','#',' ','#','#',' ','#',' ','#','#'},
    {'#',' ',' ',' ','#','#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ','#'},
    {'#',' ','#',' ','#','#',' ','#','#','#',' ','#',' ','#',' ',' ','#','#',' ','#'},
    {'#',' ',' ','#',' ',' ',' ','#',' ','#',' ',' ','#','#',' ','#','#',' ',' ','#'},
    {'#','#',' ','#',' ','#','#','#',' ','#','#',' ',' ','#',' ',' ','#',' ','#','#'},
    {'#',' ',' ','#',' ',' ','#','#',' ',' ','#','#',' ','#','#',' ','#',' ',' ','#'},
    {'#',' ','#','#','#',' ',' ','#','#',' ',' ','#',' ',' ',' ',' ','#','#',' ','#'},
    {'#',' ',' ','#',' ','#',' ','#',' ',' ','#','#','#','#',' ','#',' ',' ',' ','#'},
    {'#','#',' ','#','#',' ',' ',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ','#'},
    {'#',' ',' ',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#','#','#'},
    {'#',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ','#',' ','#',' ',' ',' ',' '},
    {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' '}
};
//(18,19)
char b[N][N + 1] = {
    {' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
    {'#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#'},
    {'#','#','#','#','#',' ','#',' ','#','#','#',' ','#',' ','#','#','#','#','#',' ','#'},
    {'#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ','#'},
    {'#',' ','#',' ','#','#','#','#','#',' ','#','#','#','#','#','#','#',' ','#',' ','#'},
    {'#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#'},
    {'#',' ',' ','#','#','#','#',' ','#',' ','#','#','#','#',' ','#','#',' ','#',' ','#'},
    {'#','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ','#',' ','#',' ','#','#',' ','#'},
    {'#',' ',' ','#','#',' ','#','#','#','#','#','#',' ','#',' ','#',' ',' ',' ',' ','#'},
    {'#','#','#','#',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#','#',' ','#',' ','#'},
    {'#',' ',' ',' ','#','#','#','#','#',' ','#','#',' ','#',' ',' ','#',' ','#',' ','#'},
    {'#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ','#',' ',' ','#',' ','#'},
    {'#',' ',' ','#','#','#','#',' ','#','#','#','#','#','#',' ','#',' ','#','#',' ','#'},
    {'#','#',' ','#',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ','#',' ','#'},
    {'#',' ',' ','#','#',' ','#','#','#','#',' ','#','#','#','#','#',' ','#','#',' ','#'},
    {'#',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
    {'#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#','#'},
    {'#','#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#','#',' ','#'},
    {'#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ','#'},
    {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' '}
};
//(19,20)
int e1, e2, cntt;
char c[30][30] = {
    {' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
    {'#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#'},
    {'#',' ','#','#','#',' ','#','#','#','#','#',' ','#',' ','#','#','#','#',' ','#','#','#','#',' ','#','#','#',' ','#'},
    {'#',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#'},
    {'#','#','#',' ','#','#','#','#','#',' ','#',' ','#','#','#','#',' ','#','#','#','#',' ','#','#',' ','#','#',' ','#'},
    {'#',' ',' ',' ','#',' ',' ',' ','#',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#',' ','#'},
    {'#',' ','#','#','#',' ','#',' ','#','#','#','#','#',' ','#','#','#','#',' ','#','#','#',' ','#','#','#','#',' ','#'},
    {'#',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#'},
    {'#','#','#',' ','#','#','#','#','#','#',' ','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#',' ','#'},
    {'#',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
    {'#',' ','#','#','#',' ','#','#',' ','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#',' ','#','#',' ','#','#'},
    {'#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ','#'},
    {'#','#','#','#','#','#','#',' ','#','#','#','#',' ','#','#','#','#','#',' ','#',' ','#','#',' ','#','#','#',' ','#'},
    {'#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ','#'},
    {'#',' ','#','#','#',' ','#','#','#',' ','#','#',' ','#','#','#','#',' ','#','#','#',' ','#','#','#','#','#','#','#'},
    {'#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
    {'#',' ','#','#','#','#','#',' ','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','#','#','#','#',' ','#'},
    {'#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#'},
    {'#','#','#','#','#',' ','#','#','#','#','#',' ','#','#','#','#',' ','#','#','#','#','#','#',' ','#','#','#',' ','#'},
    {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ','#',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#'},
    {'#',' ','#','#','#','#','#','#','#',' ','#','#','#',' ','#','#',' ','#','#','#','#','#',' ','#','#','#','#','#',' '},
    {'#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#','#'},
    {'#',' ','#',' ','#','#','#',' ','#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#','#','#',' ','#','#'},
    {'#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
    {'#',' ','#',' ','#','#','#','#','#',' ','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#'},
    {'#',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
    {'#',' ','#','#','#','#','#','#','#','#','#',' ','#','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#',' '},
    {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
    {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
    {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '}
};
pair <int, int> change(int x, int y, char c){
    if(c == 'w')
        return {x - 1, y};
    else if(c == 's')
        return {x + 1, y};
    else if(c == 'a')
        return {x, y - 1};
    return {x, y + 1};
}
void introduction(){
    cout << "You entered an ancient maze." << endl;
    sleep(1);
    cout << "You are now at position (1, 1) on the maze." << endl;
    sleep(1);
    cout << "You want to go to the other end, position (n, n), where a large amount of treasure lies." << endl;
    sleep(2);
    cout << "You do not know what n is, but once you reach there, you will know it." << endl;
    sleep(2);
    cout << "Let's start. @ stands for your position, # stands for wall you can't cross, and . stands for path." << endl;
    sleep(3);
    cout << "You can only go up, down, left, or right for one block every time." << endl;
    sleep(2);
    cout << "You enter 'w' for up, 's' for down, 'a' for left, and 'd' for right." << endl;
    sleep(2);
    cout << "Only part of the maze if showed every time." << endl;
    sleep(2);
}
void dfs(int x, int y){
    cntt ++;
    system("clear");
    cout << endl << endl << endl;
    s[x][y] = '@';
    cout << " ";
    for(int j = 0; j <= e2; j ++)
        cout << "__";
    cout << endl;
    for(int i = 0; i <= e1; i ++){
        cout << "|";
        for(int j = 0; j <= e2; j ++){
            if(i >= x - 1 && i <= x + 3 && j >= y - 1 && j <= y + 3)
                cout << s[i][j];
            else
                cout << ' ';
            cout << ' ';
        }
        cout << "|" << endl;
    } 
    cout << " ";
    for(int j = 0; j <= e2; j ++)
        cout << "__";
    cout << endl;
    if(x == e1 && y == e2)
        return;
    s[x][y] = '.';
    cout << endl << endl;
    char c;
    while(cin >> c && (c != 'w' && c != 's' && c != 'a' && c != 'd'))
        cout << "You are not following instructions. Try again." << endl;
    int nx = change(x, y, c).first, ny = change(x, y, c).second;
    while(nx < 0 || ny < 0 || nx > e1 || ny > e2 || s[nx][ny] == '#'){
        cout << "Illegal move. Try again." << endl;
        cin >> c;
        nx = change(x, y, c).first, ny = change(x, y, c).second;
    }
    dfs(nx, ny);
}
int main(){
    system("clear");
    for(int i = 1; i <= 3; i ++)
        cout << endl;
    string c;
    cout << "Have you played this game before? Enter (Yes / No)" << endl;
    cin >> c;
    if(c != "Yes")
        introduction();
    sleep(1);
    cout << "Do you want to play version (1 / 2)? Enter '1' or '2'. (Difficulty depends on personal view, but I suggest 1 is easier.)" << endl;
    cin >> c;
    if(c == "1"){
        e1 = 18, e2 = 19;
        for(int i = 0; i <= e1; i ++)
            for(int j = 0; j <= e2; j ++)
                s[i][j] = a[i][j];
    }
    if(c == "2"){
        e1 = 19, e2 = 20;
        for(int i = 0; i <= e1; i ++)
            for(int j = 0; j <= e2; j ++)
                s[i][j] = b[i][j];
    }
    for(int i = 0; i <= e1; i ++){
        for(int j = 0; j <= e2; j ++){
            if(s[i][j] == ' ')
                s[i][j] = '.';
            //cout << s[i][j] << ' ';
        }
        //cout << endl;
    }
    //sleep(100);
    int t = clock();
    dfs(0, 0);
    system("clear");
    sleep(2);
    cout << endl << ' ' << endl;
    for(int i = 0; i <= e2; i ++) 
        cout << "__";
    cout << endl;
    for(int i = 1; i <= e1; i ++){
        cout << "|";
        for(int j = 1; j <= e2; j ++)
            cout << s[i][j] << ' ';
        cout << "|" << endl;
    }
    for(int i = 0; i <= e2; i ++) 
        cout << "__";

    sleep(2);
    
    cout << endl << endl << "OMG!!! YOU BEAT THIS GAME! CONGRATS!!! 😉" << endl;
    cout << endl << endl << "It took you " << 1.0 * (clock() - t) / 1000 << " seconds to beat this game." << endl;
    sleep(1);
    cout << endl << endl << "The high score is 34.79 seconds." << endl;
    sleep(10);
    system("clear");
    return 0;
}